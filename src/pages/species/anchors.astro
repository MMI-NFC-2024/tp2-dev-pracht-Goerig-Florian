---
import Layout from "../../layouts/Layout.astro";
import PlotFigure from "../../components/PlotFigure.astro";
import * as Plot from "@observablehq/plot";
import penguins from "../../assets/penguins.json";

// Filtre par espèce
const by = (sp) => penguins.filter((d) => d.species === sp);

// Options communes pour les 3 graphiques
const base = {
  marginLeft: 48,
  marginBottom: 48,
  grid: true,
  x: { label: "Culmen length (mm)" },
  y: { label: "Culmen depth (mm)" },
  color: { legend: true },
};

// Fabrique les options d’un scatter filtré
const makeOptions = (data) => ({
  ...base,
  marks: [
    Plot.dot(
      data.filter((d) => d.culmen_length_mm && d.culmen_depth_mm),
      {
        x: "culmen_length_mm",
        y: "culmen_depth_mm",
        fill: "sex",
        r: 3,
        tip: true,
      }
    ),
  ],
});

const adelie = makeOptions(by("Adelie"));
const gentoo = makeOptions(by("Gentoo"));
const chinstrap = makeOptions(by("Chinstrap"));
---

<Layout>
  <h1>Espèces — Page unique avec ancres (slider)</h1>

  <!-- Menu à ancres -->
  <nav class="anchors" id="anchors-nav" aria-label="Navigation par espèce">
    <a href="#adelie">Adelie</a>
    <a href="#gentoo">Gentoo</a>
    <a href="#chinstrap">Chinstrap</a>
  </nav>

  <!-- Slider horizontal CSS -->
  <div class="slider" id="slider">
    <section class="slide" id="adelie" aria-label="Adelie">
      <h2>Adelie</h2>
      <PlotFigure options={adelie} />
    </section>

    <section class="slide" id="gentoo" aria-label="Gentoo">
      <h2>Gentoo</h2>
      <PlotFigure options={gentoo} />
    </section>

    <section class="slide" id="chinstrap" aria-label="Chinstrap">
      <h2>Chinstrap</h2>
      <PlotFigure options={chinstrap} />
    </section>
  </div>

  <style>
    /* Boutons du menu d’ancres */
    .anchors {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
      margin: 0 0 0.75rem;
    }
    .anchors a {
      display: inline-flex;
      align-items: center;
      padding: 0.55rem 0.9rem;
      border: 1px solid #e5e7eb;
      border-radius: 999px;
      background: #fff;
      color: #111;
      text-decoration: none;
      font-weight: 600;
      line-height: 1;
      transition:
        background 0.15s ease,
        border-color 0.15s ease,
        transform 0.06s ease;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);
    }
    .anchors a:hover,
    .anchors a:focus-visible {
      background: #f4f6f8;
      border-color: #dcdfe3;
      outline: none;
      transform: translateY(-1px);
    }

    /* Slider horizontal (CSS) */
    .slider {
      display: flex;
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      -webkit-overflow-scrolling: touch;
      scroll-behavior: smooth;
      gap: 1rem;
      padding-bottom: 0.5rem;
    }

    .slide {
      flex: 0 0 100%;
      min-width: 100%;
      scroll-snap-align: start;
      background: #fff;
      border: 1px solid #eee;
      border-radius: 12px;
      padding: 1rem;
    }
    .slide h2 {
      margin: 0 0 0.5rem;
    }
  </style>

  <!-- JS pour faire défiler le slider (ancres → scroll horizontal) -->
  <script>
    const nav = document.getElementById("anchors-nav");
    const slider = document.getElementById("slider");

    nav?.addEventListener("click", (e) => {
      const a = e.target.closest('a[href^="#"]');
      if (!a) return;
      const id = a.getAttribute("href").slice(1);
      const el = document.getElementById(id);
      if (!el) return;

      // Empêche le saut par défaut et fait défiler horizontalement le slider
      e.preventDefault();
      el.scrollIntoView({
        behavior: "smooth",
        inline: "start",
        block: "nearest",
      });
      // Optionnel: maj de l’URL sans remonter en haut
      history.replaceState(null, "", "#" + id);
    });
  </script>
</Layout>
